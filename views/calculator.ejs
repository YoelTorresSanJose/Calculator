<style>
    * {
        background-color: black;
    }

    @font-face {
        font-family: 'Roboto', sans-serif;
        src: url('https://fonts.googleapis.com/css2?family=Roboto:wght@500&display=swap');
    }

    .botones {
        display: grid;
        place-self: center;
    }

    input {
        width: 50vw;
        border: 0;
        background-color: black;
        color: white;
        font-size: 15vh;
        text-align: end;
    }

    div {
        display: flex;
        place-self: center;
    }

    button {
        width: 15vh;
        height: 15vh;
        border-radius: 100px;
        font-size: 3.5em;
        margin: 2px;
        border: 0px;
    }

    .cero {
        width: 30vh;
        border-radius: 50vh;
        text-align: left;
        padding-left: 35px;
        padding-right: 100px;
    }

    .pantalla {
        background-color: black;
    }

    .pantalla-calculadora {
        background-color: white;
    }

    .calculadora {
        font-family: 'Open 24 Display St';
        display: flex;
        flex-direction: column;
        width: 100%;
    }

    .pantalla {
        text-align: end;
        width: 30%;
        overflow: hidden;
        place-items: center;
        place-self: center;
    }

    .ColorGris {
        background-color: rgb(59, 59, 59);
        color: #FFF;
        transition: all 0.2s ease-in-out;
    }

    .ColorGris:active {
        background: rgb(139, 139, 139);
    }

    .ColorNaranja {
        background-color: orange;
        color: white;
        transition: all .2s ease-in-out;
    }

    .ColorNaranja:active {
        background-color: rgb(255, 255, 255);
        color: orange;
    }

    .ColorG {
        background-color: rgb(194, 194, 194);
        color: black;
        transition: all 0.2s ease-in-out;
    }

    .ColorG:active {
        background-color: rgb(233, 233, 233);
    }

    #C {
        display: none;
    }

    .input {
        width: 100%;
    }

    .historial-content {
        position: absolute;
        left: 300px;
        margin-top: 10px;
    }

    .historial {
        height: 50px;
    }

    .historial button {
        height: 50px;
    }
</style>

<div class="calculadora">
    <div class="pantalla">
        <input type="text" class="input" id="display" disabled value="0">
    </div>
    <div class="historial">
        <button style="color:#FFF; font-size: 30px;" onclick="mostrarHistorial()">HISTORIAL</button>
        <div class="historial-content" id="historial-content" style="color: #FFF;"></div>
    </div>
    <div class="containerbtn">
        <div class="botones">
            <div class="botones-fx">
                <button class="ColorG" id="AC" onclick="borrarDisplay(); Remplazo()">AC</button>
                <button class="ColorG" id="Parent" onclick="addParentIzq(); Remplazo()">(</button>
                <button class="ColorG" id="Parent" onclick="addParentDer(); Remplazo()">)</button>
                <button class="ColorNaranja" onclick="addToDisplay('/')">/</button>
            </div>
            <div class="botones-num">
                <button class="ColorGris" onclick="addToDisplay('7'); Remplazo()">7</button>
                <button class="ColorGris" onclick="addToDisplay('8'); Remplazo()">8</button>
                <button class="ColorGris" onclick="addToDisplay('9'); Remplazo()">9</button>
                <button class="ColorNaranja" onclick="addToDisplay('*'); Remplazo()">x</button>
            </div>
            <div class="botones-num">
                <button class="ColorGris" onclick="addToDisplay('4'); Remplazo()">4</button>
                <button class="ColorGris" onclick="addToDisplay('5'); Remplazo()">5</button>
                <button class="ColorGris" onclick="addToDisplay('6'); Remplazo()">6</button>
                <button class="ColorNaranja" onclick="addToDisplay('-'); Remplazo()">-</button>
            </div>
            <div class="botones-num">
                <button class="ColorGris" onclick="addToDisplay('1'); Remplazo()">1</button>
                <button class="ColorGris" onclick="addToDisplay('2'); Remplazo()">2</button>
                <button class="ColorGris" onclick="addToDisplay('3'); Remplazo()">3</button>
                <button class="ColorNaranja" onclick="addToDisplay('+'); Remplazo()">+</button>
            </div>
            <div class="botones-num">
                <button class="ColorGris cero" onclick="addToDisplay('0'); Remplazo()">0</button>
                <button class="ColorGris punto" onclick="addToDisplay('.'); Remplazo()">.</button>
                <button class="ColorNaranja igual" onclick="calcular()">=</button>
            </div>
        </div>
    </div>
</div>

<script>
    function mostrarHistorial() {
        const historialContent = document.getElementById('historial-content');

        if (historialContent.style.display === 'none' || historialContent.innerHTML.trim() === '') {
            // El historial está oculto o vacío, mostrarlo
            fetch('/mostrarHistorial')
                .then(response => response.json())
                .then(data => {
                    if (data.historial && data.historial.length > 0) {
                        historialContent.innerHTML = ''; // Limpiar el contenido anterior del historial
                        data.historial.forEach(item => {
                            const cuenta = item.cuenta;
                            const resultado = item.resultado;
                            historialContent.innerHTML += `${cuenta} = ${resultado}<br>`;
                        });
                    } else {
                        historialContent.innerHTML = 'El historial está vacío.';
                    }
                })
                .catch(error => {
                    console.error('Error al cargar el historial:', error);
                });
            historialContent.style.display = 'block'; // Mostrar el historial
        } else {
            // El historial está visible, ocultarlo
            historialContent.innerHTML = ''; // Limpiar el contenido del historial
            historialContent.style.display = 'none'; // Ocultar el historial
        }
    }

    function Remplazo() {
        const displayValue = document.getElementById("display");
        var contenedor = document.getElementById("AC");
        if (displayValue.value === "0") {
            contenedor.textContent = "AC";
        } else {
            contenedor.textContent = "C";
        }
    }

    function addParentIzq() {
        const Parent = "(";
        const displayValue = document.getElementById("display");
        if (displayValue.value === "0" && displayValue !== ".") {
            display.value = Parent;
        } else {
            display.value += Parent;
        }
    }

    function addParentDer() {
        const Parent = ")";
        display.value += Parent;
    }

    function addToDisplay(value) {
        const display = document.getElementById("display");
        const lastChar = display.value.charAt(display.value.length - 1);
        if ("+-*/.".includes(lastChar) && "+-*/.".includes(value)) {
            return;
        }

        if (display.value === "0" && value !== ".") {
            display.value = value;
        } else {
            display.value += value;
        }
    }

    function DelDisplay() {
        const display = document.getElementById("display");
    }

    function calcular() {
        const display = document.getElementById("display");
        try {
            let cuenta = display.value;
            let resultado = eval(display.value);
            display.value = resultado;
            let registro = {
                cuenta: cuenta,
                resultado: resultado
            };

            fetch('/HistorialAdd', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(registro)
            })
                .then(response => response.json())
                .then(data => {
                    historialDer.innerHTML = '0'; // Borra el contenido anterior del historial;
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        } catch {
            display.value = 'ERROR';
            DelDisplay();
        }
    }

    function borrarDisplay() {
        document.getElementById("display").value = "0";
    }
</script>
